<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABAAAAAAAAAAAAAAAAEAAAAB
        AAD8/PwA+Pf2APf49wD49/gA9/j5APX29gD29/gA+fn2AI6MiQBMSUMAWlVQAFpVTACSj4kA09HMAJiU
        jgBrZV0A0c/KAJuZlAC1sq0ApaKdAKmmoQB2dGwAHxsTADMtIwAgGxMAc29rANva1QAqJBcAMCcaADIq
        HAAqJRoAY15YAKKfmgA2MSkAvry6AK6sqQAmIhoAeXZwAD05KgB7eXIAubStAC4qIgAtKR0AOzQpADky
        JwBAOi4Avbq1AK2qpQC2tLAANjEmAComIQDf3doAxMK8AMjFwAB4eG4AbGliAGVjXADNy8gAubayAMG/
        uwBCOzIAJiMXAFtZTwA8OzEAa2dhAIOCeQCUkYsAjIqHAFRTSgBuaF4AwLy2AHl2bgDv8/MAp6SgAKmm
        ngDl5OAAcW5mAODf2gDj494ASkc/AIF/eQB3dnIASkdCALGuqgCBgHYAUk9JAMzKxACZl5EAn52ZAP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAEAAAAAAAAAAAADAAAAAAAAAAAAAwAAAAAAAAAAAAMAAAAAAAAAAAAAAAACAAMAAAAAAAAA
        AAADAAADAAAAAAAAAAAAAwAAAAAAAAEAAAMAAAAAAAAAAAAAAAMAAAAAAwAAAwACAAAAAAAAAAAAAAAA
        AAADAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAgAAAAAEAAADAAMAAgAAAAAEAAACAAAAAAIAAAAAAwAA
        AAAGAAEAAAIAAAAAAwABAAAAAAAAAAEAAAAAAAAAAAABAAAEAAQAAAAAAAAAAAAGAAAAAAAAAAAABwAA
        AAACAAMAAAAAAgAAAAAAAAAEAAAAAAIAAwAAAAAAAAABAAYAAAAABAAAEAwPCwsPDg0AAAUAAAAABQAM
        CT4KCUMAAAAAAAAAAAABAAABAAAAAAAAAgAAAAAAAAAAAAAAAAIAAAAAAwAQHxceHB0dHBsXDxoABgAD
        AAAAFRgdFxgZAAMAAwABAElJAAIAAAMAAQASVwACAgABAAAAAAAAAAAAAgAABgAvFxsmLCsrLBctPBgh
        OgADAAADACcdKy0eJwAAAAAAACMyMlMAAQAAAQA7KSRYAAIAAAAAAAAAAAAAAAAEAABJGCErLCwrKy0X
        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
        AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>